// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  // provider = "sqlite"
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Event {
  id            Int            @id @default(autoincrement())
  name          String
  description   String
  location      String
  starts_at     DateTime
  price         Decimal
  registrations Registration[]
}

model Registration {
  id         Int      @id @default(autoincrement())
  created_at DateTime @default(now())
  updated_at DateTime @default(now()) @updatedAt
  name       String
  email      String
  event_id   Int
  how_heard  String
  event      Event    @relation(fields: [event_id], references: [id])
}

// model User {
//   id                    Int      @id @default(autoincrement())
//   created_at            DateTime @default(now())
//   updated_at            DateTime @default(now()) @updatedAt
//   email                 String   @unique
//   name                  String
//   password_digest       String
//   password_confirmation String?
//   // role      Role     @default(USER)
//   // events    Event[]
// }

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
